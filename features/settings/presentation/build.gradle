apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.com.diskin.alon.pagoda.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Java 8
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    // for robolectric testing
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

kapt {
    correctErrorTypes true
}

hilt {
    enableTransformForLocalTests = true
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_app_compat"
    api 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Project modules
    api project(':features:common:presentation')
    implementation project(':features:settings:shared')
    implementation project(':features:weather:shared')

    // View model
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Fragment testing
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // Local\Unit testing
    testImplementation project(':features:common:uiTesting')
    testImplementation project(':features:common:localTesting')
    testImplementation "org.robolectric:robolectric:$robolectric_version"

}