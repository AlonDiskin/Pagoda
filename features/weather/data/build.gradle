plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def localProperties = new Properties()

if (rootProject.file("local.properties").exists()) {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} else {
    localProperties.setProperty('openWeatheMapApiKey',"\"API_KEY_STUB\"")
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.com.diskin.alon.pagoda.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "OPEN_WEATHER_MAP_API_KEY", localProperties['openWeatheMapApiKey']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    // for robolectric testing
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Android core
    implementation "androidx.core:core-ktx:$androidx_core_version"

    // Project modules
    implementation project(':features:weather:application')
    implementation project(':features:weather:domain')
    implementation project(':features:common:util')

    // Javax annotation
    implementation "javax.inject:javax.inject:$javax_annotation_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"

    // Joda Time
    implementation "joda-time:joda-time:$joda_version"

    // Google play services
    api 'com.google.android.gms:play-services-location:18.0.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Unit/Local testing
    testImplementation project(':features:common:localTesting')
    testImplementation project(":features:common:instrumentationTesting")
    testImplementation "com.squareup.okhttp3:mockwebserver:3.9.1"
    testImplementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    testImplementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.room:room-testing:$room_version"
    kaptTest "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
}