// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.androidx_core_version = "1.6.0"
    ext.androidx_app_compat = "1.3.1"
    ext.kotlin_version = "1.5.21"
    ext.robolectric_version = "4.3.1"
    ext.javax_annotation_version = "1"
    ext.rx_java_version = "2.2.19"
    ext.rx_kotlin_version = "2.4.0"
    ext.joda_version = "2.10.4"
    ext.material_version = "1.4.0"
    ext.fragment_version = "1.3.6"
    ext.lifecycle_version = "2.4.0-alpha02"
    ext.rx_android_version = "2.1.1"
    ext.hilt_version = "2.38.1"
    ext.hilt_worker_version = "1.0.0"
    ext.nav_component_version = "2.3.4"
    ext.paging_version = "3.0.1"
    ext.room_version = "2.4.0-alpha01"
    ext.work_version = "2.7.0-alpha02"

    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task unitTests {
    doLast {
        subprojects.forEach {
            def path = it.path

            // Run unit test for a java library/kotlin module
            if ((it.plugins.findPlugin('java-library') != null) && it.name != "featureTesting") {
                exec {
                    executable './gradlew'
                    args "${path}:test"
                }
            }

            // Run unit test for android library module
            if ((it.plugins.findPlugin('com.android.library') != null) && it.name != "featureTesting") {
                exec {
                    executable './gradlew'
                    args "${path}:testDebugUnitTest"
                }
            }
        }
    }
}

task featureTests {
    doLast {
        subprojects.forEach {
            def path = it.path

            // Run integration test
            if (it.name == "featureTesting") {
                exec {
                    executable './gradlew'
                    args "${path}:testDebugUnitTest"

                }
            }
        }
    }
}