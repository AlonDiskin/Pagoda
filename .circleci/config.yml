version: 2
jobs:
  unit_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Unit test common
          command: ./gradlew :features:common:events:testDebugUnitTest --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Unit test home feature
          command: ./gradlew :features:home:presentation:testDebugUnitTest --tests 'com.diskin.alon.pagoda.home.presentation.*' --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Unit test weather info feature
          command: ./gradlew :features:weatherInfo:presentation:testDebugUnitTest :features:weatherInfo:infrastructure:testDebugUnitTest :features:weatherInfo:data:testDebugUnitTest :features:weatherInfo:appServices:test :features:weatherInfo:domain:test --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Unit test settings feature
          command: ./gradlew :features:settings:presentation:testDebugUnitTest :features:settings:appServices:test :features:settings:data:testDebugUnitTest :features:settings:infrastructure:testDebugUnitTest --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Unit test locations feature
          command: ./gradlew :features:locations:presentation:testDebugUnitTest :features:locations:data:testDebugUnitTest :features:locations:appServices:test :features:locations:domain:test --no-daemon --max-workers=2 --stacktrace
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: features/common/events/build/test-results
      - store_test_results:
          path: features/home/presentation/build/test-results
      - store_test_results:
          path: features/weatherInfo/presentation/build/test-results
      - store_test_results:
          path: features/weatherInfo/data/build/test-results
      - store_test_results:
          path: features/weatherInfo/appServices/build/test-results
      - store_test_results:
          path: features/weatherInfo/domain/build/test-results
      - store_test_results:
          path: features/weatherInfo/infrastructure/build/test-results
      - store_test_results:
          path: features/settings/presentation/build/test-results
      - store_test_results:
          path: features/settings/appServices/build/test-results
      - store_test_results:
          path: features/locations/presentation/build/test-results
      - store_test_results:
          path: features/locations/data/build/test-results
      - store_test_results:
          path: features/locations/appServices/build/test-results
      - store_test_results:
          path: features/locations/domain/build/test-results
  integration_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Integration test weather info feature
          command: ./gradlew :features:weatherInfo:featureTesting:testDebugUnitTest --tests 'com.diskin.alon.pagoda.weatherinfo.featuretesting.*' --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Integration test settings feature
          command: ./gradlew :features:settings:featureTesting:testDebugUnitTest --tests 'com.diskin.alon.pagoda.settings.featuretesting.*' --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Integration test locations feature
          command: ./gradlew :features:locations:featureTesting:testDebugUnitTest --tests 'com.diskin.alon.pagoda.locations.featuretesting.*' --no-daemon --max-workers=2 --stacktrace
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: features/weatherInfo/featureTesting/build/test-results
      - store_test_results:
          path: features/settings/featureTesting/build/test-results
      - store_test_results:
          path: features/locations/featureTesting/build/test-results
  e2e_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug APK and release APK
          command: ./gradlew :app:assembleDebug :app:assembleDebugAndroidTest --no-daemon --max-workers=2 --stacktrace
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --device model=Pixel2,version=29,locale=en,orientation=portrait \
              --use-orchestrator
workflows:
  version: 2
  build_and_test:
    jobs:
      - unit_tests
      - integration_tests
      - e2e_tests:
          filters:
            branches:
              only:
                - master
